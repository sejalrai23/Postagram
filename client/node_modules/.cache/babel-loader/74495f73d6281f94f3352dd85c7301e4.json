{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\projects\\\\messenger-clone\\\\client\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport \"./Messenger.css\";\nimport Topbar from '../../components/Topbar/Topbar';\nimport Conversations from '../../components/conversations/Conversations';\nimport Message from '../../components/message/Message';\nimport ChatOnline from '../../components/ChatOnline/ChatOnline';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { LineAxisOutlined } from '@mui/icons-material';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messenger() {\n  _s();\n\n  const [conversation, setConversation] = useState([]);\n  const [currChat, setCurrChat] = useState(null);\n  const [message, setMessage] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/getconversation/${user._id}`);\n        console.log(\"conversation\", res);\n        setConversation(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/getmessage/${currChat === null || currChat === void 0 ? void 0 : currChat._id}`);\n        console.log(\"messages\", res);\n        setMessage(res.data);\n      } catch (err) {\n        console.log(res);\n      }\n    };\n\n    getMessages();\n  }, [currChat]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), conversation.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversations, {\n              convo: c,\n              currUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: message.map(m => /*#__PURE__*/_jsxDEV(Message, {\n                message: m,\n                own: m.sender === user._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write your message..\",\n                onChange: e => setNewMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noconvoText\",\n            children: \"Open a conversation to start a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"ybj4wqHgz7tj4rgebqRajNj+bX0=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/projects/messenger-clone/client/src/pages/messenger/Messenger.jsx"],"names":["React","useContext","useState","useEffect","Topbar","Conversations","Message","ChatOnline","AuthContext","LineAxisOutlined","axios","Messenger","conversation","setConversation","currChat","setCurrChat","message","setMessage","newMessage","setNewMessage","user","getConversations","res","get","_id","console","log","data","err","getMessages","map","c","m","sender","e","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\r\nimport \"./Messenger.css\"\r\nimport Topbar from '../../components/Topbar/Topbar';\r\nimport Conversations from '../../components/conversations/Conversations';\r\nimport Message from '../../components/message/Message';\r\nimport ChatOnline from '../../components/ChatOnline/ChatOnline';\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\nimport { LineAxisOutlined } from '@mui/icons-material';\r\nimport axios from \"axios\";\r\n\r\n\r\nfunction Messenger() {\r\n  const [conversation , setConversation]= useState([]);\r\n  const[ currChat , setCurrChat]= useState(null);\r\n  const [ message , setMessage]= useState([]);\r\n  const [newMessage , setNewMessage]= useState(\"\");\r\n  const {user}= useContext(AuthContext);\r\n  \r\n  useEffect(() => {\r\n    const getConversations= async()=>{\r\n      try{\r\n      const res= await axios.get(`http://localhost:4000/api/getconversation/${user._id}`);\r\n      console.log(\"conversation\", res);\r\n      setConversation(res.data);\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  useEffect(()=>{\r\n     const getMessages= async()=>{\r\n      try{\r\n      const res= await axios.get(`http://localhost:4000/api/getmessage/${currChat?._id}`);\r\n      console.log(\"messages\",res);\r\n      setMessage(res.data);\r\n      }catch(err){\r\n        console.log(res);\r\n      }\r\n     }\r\n     getMessages();\r\n  }, [currChat])\r\n  \r\n\r\n  return (\r\n    <>\r\n    <Topbar/>\r\n    <div className='messenger'>\r\n        <div className=\"chatMenu\">\r\n            <div className=\"chatMenuWrapper\">\r\n                <input placeholder='search for friends' className='chatMenuInput' />\r\n                {conversation.map((c)=>(\r\n                  <div onClick={()=>setCurrChat(c)}>\r\n                  <Conversations convo={c} currUser={user} />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n            <div className=\"chatBoxWrapper\">\r\n              {currChat ? \r\n              (<>\r\n              <div className=\"chatBoxTop\">\r\n                {message.map((m)=>(\r\n                  <Message message={m} own={m.sender===user._id}/>\r\n                ))}\r\n              </div>\r\n              <div className=\"chatBoxBottom\">\r\n                <textarea className='chatMessageInput' placeholder='write your message..' onChange={(e)=>setNewMessage(e.target.value)}>\r\n                </textarea>\r\n                <button className='chatSubmitButton'>Send</button>\r\n              </div>\r\n              </> )\r\n              : (<span className='noconvoText'>Open a conversation to start a chat</span>\r\n              )}\r\n              </div>\r\n            \r\n        </div>\r\n        <div className=\"chatOnline\">\r\n            <div className=\"chatOnlineWrapper\">\r\n               <ChatOnline/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Messenger"]},"metadata":{},"sourceType":"module"}