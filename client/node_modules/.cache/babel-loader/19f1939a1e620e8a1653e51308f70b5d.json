{"ast":null,"code":"const AuthReducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_START\":\n      return {\n        user: null,\n        isFetching: true,\n        error: false\n      };\n\n    case \"LOGIN_SUCCESS\":\n      return {\n        user: action.payload,\n        isFetching: false,\n        error: false\n      };\n\n    case \"LOGIN_FAILURE\":\n      return {\n        user: null,\n        isFetching: false,\n        error: action.payload\n      };\n\n    case \"FOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          following: [...state.user.followings, action.payload]\n        }\n      };\n\n    case \"UNFOLLOW\":\n      return { ...state,\n        user: { ...state.user,\n          followings: state.user.followings.filter(following => following !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = AuthReducer;\nexport default AuthReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthReducer\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/projects/messenger-clone/client/src/context/AuthReducer.js"],"names":["AuthReducer","state","action","type","user","isFetching","error","payload","following","followings","filter"],"mappings":"AAAA,MAAMA,WAAW,GAAC,CAACC,KAAD,EAAQC,MAAR,KAAiB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAM;AACFC,QAAAA,IAAI,EAAC,IADH;AAEFC,QAAAA,UAAU,EAAC,IAFT;AAGFC,QAAAA,KAAK,EAAC;AAHJ,OAAN;;AAKJ,SAAK,eAAL;AACI,aAAM;AACFF,QAAAA,IAAI,EAACF,MAAM,CAACK,OADV;AAEFF,QAAAA,UAAU,EAAC,KAFT;AAGFC,QAAAA,KAAK,EAAC;AAHJ,OAAN;;AAOJ,SAAK,eAAL;AACI,aAAM;AACFF,QAAAA,IAAI,EAAC,IADH;AAEFC,QAAAA,UAAU,EAAC,KAFT;AAGFC,QAAAA,KAAK,EAACJ,MAAM,CAACK;AAHX,OAAN;;AAKA,SAAK,QAAL;AACI,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJI,UAAAA,SAAS,EAAE,CAAC,GAAGP,KAAK,CAACG,IAAN,CAAWK,UAAf,EAA2BP,MAAM,CAACK,OAAlC;AAFP;AAFD,OAAP;;AAOF,SAAK,UAAL;AACE,aAAO,EACL,GAAGN,KADE;AAELG,QAAAA,IAAI,EAAE,EACJ,GAAGH,KAAK,CAACG,IADL;AAEJK,UAAAA,UAAU,EAAER,KAAK,CAACG,IAAN,CAAWK,UAAX,CAAsBC,MAAtB,CACTF,SAAD,IAAeA,SAAS,KAAKN,MAAM,CAACK,OAD1B;AAFR;AAFD,OAAP;;AASR;AACI,aAAON,KAAP;AAxCR;AA2CH,CA5CD;;KAAMD,W;AA8CN,eAAeA,WAAf","sourcesContent":["const AuthReducer=(state, action)=>{\r\n    switch(action.type){\r\n        case \"LOGIN_START\":\r\n            return{\r\n                user:null,\r\n                isFetching:true,\r\n                error:false\r\n            };\r\n        case \"LOGIN_SUCCESS\":\r\n            return{\r\n                user:action.payload,\r\n                isFetching:false,\r\n                error:false\r\n            };\r\n\r\n\r\n        case \"LOGIN_FAILURE\":\r\n            return{\r\n                user:null,\r\n                isFetching:false,\r\n                error:action.payload\r\n            };\r\n            case \"FOLLOW\":\r\n                return {\r\n                  ...state,\r\n                  user: {\r\n                    ...state.user,\r\n                    following: [...state.user.followings, action.payload],\r\n                  },\r\n                };\r\n              case \"UNFOLLOW\":\r\n                return {\r\n                  ...state,\r\n                  user: {\r\n                    ...state.user,\r\n                    followings: state.user.followings.filter(\r\n                      (following) => following !== action.payload\r\n                    ),\r\n                  },\r\n                };\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}