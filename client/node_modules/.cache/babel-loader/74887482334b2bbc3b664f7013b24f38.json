{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\projects\\\\messenger-clone\\\\client\\\\src\\\\pages\\\\messenger\\\\Messenger.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect, useRef } from 'react';\nimport \"./Messenger.css\";\nimport Topbar from '../../components/Topbar/Topbar';\nimport Conversations from '../../components/conversations/Conversations';\nimport Message from '../../components/message/Message';\nimport ChatOnline from '../../components/ChatOnline/ChatOnline';\nimport { AuthContext } from \"../../context/AuthContext\";\nimport axios from \"axios\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Messenger() {\n  _s();\n\n  const [conversation, setConversation] = useState([]);\n  const [currChat, setCurrChat] = useState(null);\n  const [message, setMessage] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const {\n    user\n  } = useContext(AuthContext); // const [socket , setSocket]=useState(null);\n\n  const socket = useRef(io(\"ws://localhost:8800\"));\n  const scrollRef = useRef();\n  useEffect(() => {\n    socket.current.emit(\"addUser\", user._id);\n  }, []);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.on(\"weclome \", message => {\n      console.log(message);\n    });\n  }, [socket]);\n  useEffect(() => {\n    const getConversations = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/getconversation/${user._id}`);\n        console.log(\"conversation\", res);\n        setConversation(res.data);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    getConversations();\n  }, [user._id]);\n  useEffect(() => {\n    const getMessages = async () => {\n      try {\n        const res = await axios.get(`http://localhost:4000/api/getmessage/${currChat === null || currChat === void 0 ? void 0 : currChat._id}`);\n        console.log(\"messages\", res);\n        setMessage(res.data);\n      } catch (err) {\n        console.log(res);\n      }\n    };\n\n    getMessages();\n  }, [currChat]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const sendmessage = {\n      sender: user._id,\n      text: newMessage,\n      conversationId: currChat._id\n    };\n\n    try {\n      const res = await axios.post(`http://localhost:4000/api/message`, sendmessage);\n      setMessage([...message, res.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [message]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messenger\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatMenu\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatMenuWrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"search for friends\",\n            className: \"chatMenuInput\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), conversation.map(c => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => setCurrChat(c),\n            children: /*#__PURE__*/_jsxDEV(Conversations, {\n              convo: c,\n              currUser: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatBox\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatBoxWrapper\",\n          children: currChat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxTop\",\n              children: message.map(m => /*#__PURE__*/_jsxDEV(\"div\", {\n                ref: scrollRef,\n                children: /*#__PURE__*/_jsxDEV(Message, {\n                  message: m,\n                  own: m.sender === user._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chatBoxBottom\",\n              children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                className: \"chatMessageInput\",\n                placeholder: \"write your message..\",\n                onChange: e => setNewMessage(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"chatSubmitButton\",\n                onClick: handleSubmit,\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"noconvoText\",\n            children: \"Open a conversation to start a chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatOnline\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatOnlineWrapper\",\n          children: /*#__PURE__*/_jsxDEV(ChatOnline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Messenger, \"nNgKN5F2nZret0MQtqYNUU59eCE=\");\n\n_c = Messenger;\nexport default Messenger;\n\nvar _c;\n\n$RefreshReg$(_c, \"Messenger\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/projects/messenger-clone/client/src/pages/messenger/Messenger.jsx"],"names":["React","useContext","useState","useEffect","useRef","Topbar","Conversations","Message","ChatOnline","AuthContext","axios","io","Messenger","conversation","setConversation","currChat","setCurrChat","message","setMessage","newMessage","setNewMessage","user","socket","scrollRef","current","emit","_id","on","console","log","getConversations","res","get","data","err","getMessages","handleSubmit","e","preventDefault","sendmessage","sender","text","conversationId","post","scrollIntoView","behavior","map","c","m","target","value"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect, useRef} from 'react';\r\nimport \"./Messenger.css\"\r\nimport Topbar from '../../components/Topbar/Topbar';\r\nimport Conversations from '../../components/conversations/Conversations';\r\nimport Message from '../../components/message/Message';\r\nimport ChatOnline from '../../components/ChatOnline/ChatOnline';\r\nimport {AuthContext} from \"../../context/AuthContext\";\r\n\r\nimport axios from \"axios\";\r\nimport {io} from \"socket.io-client\";\r\n\r\n\r\nfunction Messenger() {\r\n  const [conversation , setConversation]= useState([]);\r\n  const[ currChat , setCurrChat]= useState(null);\r\n  const [ message , setMessage]= useState([]);\r\n  const [newMessage , setNewMessage]= useState(\"\");\r\n  const {user}= useContext(AuthContext);\r\n  // const [socket , setSocket]=useState(null);\r\n  const socket= useRef(io(\"ws://localhost:8800\"));\r\n  const scrollRef= useRef()\r\n\r\n  useEffect(() => {\r\n    socket.current.emit(\"addUser\", user._id);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    socket?.on(\"weclome \", message=>{\r\n       console.log(message)\r\n    })\r\n  }, [socket])\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    const getConversations= async()=>{\r\n      try{\r\n      const res= await axios.get(`http://localhost:4000/api/getconversation/${user._id}`);\r\n      console.log(\"conversation\", res);\r\n      setConversation(res.data);\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n    }\r\n    getConversations();\r\n  }, [user._id]);\r\n\r\n  useEffect(()=>{\r\n     const getMessages= async()=>{\r\n      try{\r\n      const res= await axios.get(`http://localhost:4000/api/getmessage/${currChat?._id}`);\r\n      console.log(\"messages\",res);\r\n      setMessage(res.data);\r\n      }catch(err){\r\n        console.log(res);\r\n      }\r\n     }\r\n     getMessages();\r\n  }, [currChat]);\r\n\r\n\r\n  const handleSubmit=async(e)=>{\r\n      e.preventDefault();\r\n      const sendmessage={\r\n        sender:user._id,\r\n        text: newMessage,\r\n        conversationId: currChat._id\r\n      };\r\n      try{\r\n          const res=await axios.post(`http://localhost:4000/api/message`, sendmessage);\r\n          setMessage([...message, res.data ])\r\n      }catch(err){\r\n        console.log(err);\r\n      }\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollRef.current?.scrollIntoView({behavior:\"smooth\"})\r\n  }, [message])\r\n  \r\n  \r\n\r\n  return (\r\n    <>\r\n    <Topbar/>\r\n    <div className='messenger'>\r\n        <div className=\"chatMenu\">\r\n            <div className=\"chatMenuWrapper\">\r\n                <input placeholder='search for friends' className='chatMenuInput' />\r\n                {conversation.map((c)=>(\r\n                  <div onClick={()=>setCurrChat(c)}>\r\n                  <Conversations convo={c} currUser={user} />\r\n                  </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n        <div className=\"chatBox\">\r\n            <div className=\"chatBoxWrapper\">\r\n              {currChat ? \r\n              (<>\r\n              <div className=\"chatBoxTop\">\r\n                {message.map((m)=>(\r\n                  <div ref={scrollRef}>\r\n                  <Message message={m} own={m.sender===user._id}/>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <div className=\"chatBoxBottom\">\r\n                <textarea className='chatMessageInput' placeholder='write your message..' onChange={(e)=>setNewMessage(e.target.value)}>\r\n                </textarea>\r\n                <button className='chatSubmitButton' onClick={handleSubmit}>Send</button>\r\n              </div>\r\n              </> )\r\n              : (<span className='noconvoText'>Open a conversation to start a chat</span>\r\n              )}\r\n              </div>\r\n            \r\n        </div>\r\n        <div className=\"chatOnline\">\r\n            <div className=\"chatOnlineWrapper\">\r\n               <ChatOnline/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Messenger"]},"metadata":{},"sourceType":"module"}